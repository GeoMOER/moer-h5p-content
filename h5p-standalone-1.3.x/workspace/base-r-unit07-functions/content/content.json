{"introPage":{"showIntroPage":false,"startButtonText":"Start Quiz","introduction":""},"progressType":"dots","passPercentage":50,"questions":[{"params":{"media":{"disableImageZooming":false},"text":"<p>Fill out the blanks in the function definition below. The aim is to create a function that checks if a given numeric value is greater than a specified threshold, allowing for customization of the threshold using the optional argument <code>threshold<\/code>. By default, this threshold shall be set to 5.<\/p>\n","overallFeedback":[{"from":0,"to":100}],"showSolutions":"Show solution","tryAgain":"Retry","checkAnswer":"Check","submitAnswer":"Submit","notFilledOut":"Please fill in all blanks to view solution","answerIsCorrect":"&#039;:ans&#039; is correct","answerIsWrong":"&#039;:ans&#039; is wrong","answeredCorrectly":"Answered correctly","answeredIncorrectly":"Answered incorrectly","solutionLabel":"Correct answer:","inputLabel":"Blank input @num of @total","inputHasTipLabel":"Tip available","tipLabel":"Tip","behaviour":{"enableRetry":true,"enableSolutionsButton":true,"enableCheckButton":true,"autoCheck":false,"caseSensitive":true,"showSolutionsRequiresInput":true,"separateLines":false,"confirmCheckDialog":false,"confirmRetryDialog":false,"acceptSpellingErrors":false},"scoreBarLabel":"You got :num out of :total points","a11yCheck":"Check the answers. The responses will be marked as correct, incorrect, or unanswered.","a11yShowSolution":"Show the solution. The task will be marked with its correct solution.","a11yRetry":"Retry the task. Reset all responses and start the task over again.","a11yCheckingModeHeader":"Checking mode","confirmCheck":{"header":"Finish ?","body":"Are you sure you wish to finish ?","cancelLabel":"Cancel","confirmLabel":"Finish"},"confirmRetry":{"header":"Retry ?","body":"Are you sure you wish to retry ?","cancelLabel":"Cancel","confirmLabel":"Confirm"},"questions":["<p>check_threshold &lt;- function(value, *threshold*=*5* ) {<br>\n&nbsp; if (*value* &gt; threshold) {<br>\n&nbsp; &nbsp; result &lt;- \"Above threshold\"<br>\n&nbsp; } else {<br>\n&nbsp; &nbsp; result &lt;- \"Below threshold\"<br>\n&nbsp; }<br>\n&nbsp; return(*result*)<br>\n}<br>\n&nbsp;<\/p>\n"]},"library":"H5P.Blanks 1.14","metadata":{"contentType":"Fill in the Blanks","license":"U","title":"threshold"},"subContentId":"c5d762e2-b584-4d18-a355-de5bba6dddbe"},{"params":{"media":{"disableImageZooming":false},"text":"<p>Fill in the blanks to complete the function definition. This function should estimate the population growth of a city over a specified number of years. &nbsp;The default growth rate, which will be the exponent within the calculation, shall be set to 0.02 (2%).<\/p>\n","overallFeedback":[{"from":0,"to":100}],"showSolutions":"Show solution","tryAgain":"Retry","checkAnswer":"Check","submitAnswer":"Submit","notFilledOut":"Please fill in all blanks to view solution","answerIsCorrect":"&#039;:ans&#039; is correct","answerIsWrong":"&#039;:ans&#039; is wrong","answeredCorrectly":"Answered correctly","answeredIncorrectly":"Answered incorrectly","solutionLabel":"Correct answer:","inputLabel":"Blank input @num of @total","inputHasTipLabel":"Tip available","tipLabel":"Tip","behaviour":{"enableRetry":true,"enableSolutionsButton":true,"enableCheckButton":true,"autoCheck":false,"caseSensitive":true,"showSolutionsRequiresInput":true,"separateLines":false,"confirmCheckDialog":false,"confirmRetryDialog":false,"acceptSpellingErrors":false},"scoreBarLabel":"You got :num out of :total points","a11yCheck":"Check the answers. The responses will be marked as correct, incorrect, or unanswered.","a11yShowSolution":"Show the solution. The task will be marked with its correct solution.","a11yRetry":"Retry the task. Reset all responses and start the task over again.","a11yCheckingModeHeader":"Checking mode","confirmCheck":{"header":"Finish ?","body":"Are you sure you wish to finish ?","cancelLabel":"Cancel","confirmLabel":"Finish"},"confirmRetry":{"header":"Retry ?","body":"Are you sure you wish to retry ?","cancelLabel":"Cancel","confirmLabel":"Confirm"},"questions":["<p>estimate_population_growth &lt;- function(initial_population, years, growth_rate = *0.02*) {<br>\n&nbsp; *population* &lt;- initial_population x (1 + *rate*) ^ *years* <br>\n&nbsp; return(population)<br>\n}<br>\n&nbsp;<\/p>\n"]},"library":"H5P.Blanks 1.14","metadata":{"contentType":"Fill in the Blanks","license":"U","title":"population function"},"subContentId":"55095b87-a2ab-4c4d-bc69-87bdc4ce9917"},{"params":{"media":{"disableImageZooming":false},"text":"<p>Many roads lead to Rome.&nbsp;&nbsp;<\/p>\n\n<p>You created a function that calculates the distance between two geographic coordinates (latitude and longitude) using the Haversine formula. The function should take the latitude and longitude of two locations as input and return the distance in kilometers.<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>calculate_distance &lt;- function(lat1, lon1, lat2, lon2, R =&nbsp;6371.0) {<br>\n&nbsp; # Convert latitude and longitude from degrees to radians<br>\n&nbsp; lat1_rad &lt;- lat1 * pi \/ 180<br>\n&nbsp; lat2_rad &lt;- lat2 * pi \/ 180<br>\n&nbsp;<\/p>\n\n<p>&nbsp;dlat &lt;- (lat2 - lat1)* pi \/ 180<\/p>\n\n<p>&nbsp;dlon &lt;- (lon2- lon1)* pi \/ 180<br>\n&nbsp;<br>\n&nbsp; a &lt;- sin(dlat\/2)^2 + cos(lat1_rad) * cos(lat2_rad) * sin(dlon\/2)^2<br>\n&nbsp; c &lt;- 2 * atan2(sqrt(a), sqrt(1-a))<br>\n&nbsp; distance &lt;- R* c &nbsp;# Radius of the Earth in kilometers<br>\n&nbsp; return( *distance* )<br>\n}<\/p>\n\n<p>Type in how you'd use your own function to calculate the distance between Marburg ( 50.8021\u00b0 N, 8.7732\u00b0 E) and Rome (41.9028\u00b0N, 12.4964\u00b0E)?<\/p>\n","overallFeedback":[{"from":0,"to":100}],"showSolutions":"Show solution","tryAgain":"Retry","checkAnswer":"Check","submitAnswer":"Submit","notFilledOut":"Please fill in all blanks to view solution","answerIsCorrect":"&#039;:ans&#039; is correct","answerIsWrong":"&#039;:ans&#039; is wrong","answeredCorrectly":"Answered correctly","answeredIncorrectly":"Answered incorrectly","solutionLabel":"Correct answer:","inputLabel":"Blank input @num of @total","inputHasTipLabel":"Tip available","tipLabel":"Tip","behaviour":{"enableRetry":true,"enableSolutionsButton":true,"enableCheckButton":true,"autoCheck":false,"caseSensitive":true,"showSolutionsRequiresInput":true,"separateLines":false,"confirmCheckDialog":false,"confirmRetryDialog":false,"acceptSpellingErrors":false},"scoreBarLabel":"You got :num out of :total points","a11yCheck":"Check the answers. The responses will be marked as correct, incorrect, or unanswered.","a11yShowSolution":"Show the solution. The task will be marked with its correct solution.","a11yRetry":"Retry the task. Reset all responses and start the task over again.","a11yCheckingModeHeader":"Checking mode","confirmCheck":{"header":"Finish ?","body":"Are you sure you wish to finish ?","cancelLabel":"Cancel","confirmLabel":"Finish"},"confirmRetry":{"header":"Retry ?","body":"Are you sure you wish to retry ?","cancelLabel":"Cancel","confirmLabel":"Confirm"},"questions":["<p> return( *distance* ); *calculate_distance*(*50.8021*, *8.7732*, 41.9028, *12.4964*)<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n\n<p>&nbsp;<\/p>\n"]},"library":"H5P.Blanks 1.14","metadata":{"contentType":"Fill in the Blanks","license":"U","title":"haversine"},"subContentId":"744f77b2-7cdb-42dc-a863-0dfda1ee825c"}],"disableBackwardsNavigation":false,"randomQuestions":false,"endGame":{"showResultPage":true,"showSolutionButton":true,"showRetryButton":true,"noResultMessage":"Finished","message":"Your result:","scoreBarLabel":"You got @finals out of @totals points","overallFeedback":[{"from":0,"to":100}],"solutionButtonText":"Show solution","retryButtonText":"Retry","finishButtonText":"Finish","submitButtonText":"Submit","showAnimations":false,"skippable":false,"skipButtonText":"Skip video"},"override":{"checkButton":true},"texts":{"prevButton":"Previous question","nextButton":"Next question","finishButton":"Finish","submitButton":"Submit","textualProgress":"Question: @current of @total questions","jumpToQuestion":"Question %d of %total","questionLabel":"Question","readSpeakerProgress":"Question @current of @total","unansweredText":"Unanswered","answeredText":"Answered","currentQuestionText":"Current question","navigationLabel":"Questions"}}
